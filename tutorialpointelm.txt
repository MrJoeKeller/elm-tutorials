Here's the lesson for this: https://www.tutorialspoint.com/elm/elm_introduction.htm

To enter the ELM Shell, type elm repl in your project
directory.

To exit, type :exit

Lots of commands have changed for Elm...I've had to go digging, 
but I think the correct thing to do to install packages is 
leave off that 'paackage part'. So it becomes:
elm install elm/http

Just look at this init file too...
https://github.com/elm/compiler/blob/master/hints/init.md

There's also THIS to get started:
https://guide.elm-lang.org/core_language.html

Elm Archtitechutre basically:
The Elm program produces HTML to show on screen, and then the computer sends back messages of what is going on. "They clicked a button!"

Model - The state of your application
View - a way to turn your state into HTML
Update - a way to update your state based on messages


Elm always looks for a 'main' value to determine how our program functions 

Elm does not write ACTUAL HTML....
it's virtual ELM that checks for implementation

The browser sends a msg to the elm runtime.
That Runtime goes to our 'update' function. It takes the msg AND the current Model
Then, it does the changes, and returns a NEW model to update to the runtime.

THEN the runtime takes the new model to the 'view' function.
That view function goes, 'okay, here's the new HTML' to the 
ELM Runtime.

Finally, that runtime takes that new HTML, generates a new DOM,
and returns that to the browser